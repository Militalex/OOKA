<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.hbrs.ooka</groupId>
    <artifactId>ProduktManagementKomponente</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.3.232</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hbrs.ooka</groupId>
            <artifactId>RuntimeEnvironmentLibrary</artifactId>
            <version>1.0.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/libs/RuntimeEnvironment-LIBRARY.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>24.0.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- Build configuration. Hier sollte noch ein Plugin f체r
     das Packaging hinzugef체gt werden. Das Standard-Plugin von Maven
     f체gt leider kein Abh채ngigkeiten hinzu. Bitte gerne nach Alternativen suchen.
     ChatGPT liefert hier gute Beispiele (denkbares Prompt: How can I include a jar-File
     into a jar file when using maven? :-)-->

    <build>
        <plugins>
            <plugin>
                <!-- 1. SHADED (Uber-JAR) -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <id>shaded-jar</id>
                        <phase>package</phase>
                        <goals><goal>shade</goal></goals>
                        <configuration>
                            <finalName>${project.artifactId}-SHADED</finalName>
                            <outputDirectory>${project.basedir}/jars</outputDirectory>
                            <filters>
                                <filter>
                                    <!-- Dein eigenes Projekt als "Dependency" referenzieren -->
                                    <artifact>${project.groupId}:${project.artifactId}</artifact>
                                    <includes>
                                        <include>org/hbrs/ooka/uebung1/**</include>
                                    </includes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <executions>
                    <execution>
                        <id>library-jar</id>
                        <phase>compile</phase>
                        <goals><goal>jar</goal></goals>
                        <configuration>
                            <classifier>LIBRARY</classifier>
                            <finalName>${project.artifactId}</finalName>
                            <outputDirectory>${project.basedir}/jars</outputDirectory>
                            <includes>
                                <include>org/hbrs/ooka/uebung1/interfaces/**</include>
                                <include>org/hbrs/ooka/uebung1/HashMapCache.class</include>
                                <include>org/hbrs/ooka/uebung1/component/PortProductManagement.class</include>
                            </includes>
                        </configuration>
                    </execution>

                    <execution>
                        <id>component-jar</id>
                        <phase>compile</phase>
                        <goals><goal>jar</goal></goals>
                        <configuration>
                            <classifier>COMPONENT</classifier>
                            <finalName>${project.artifactId}</finalName>
                            <outputDirectory>${project.basedir}/jars</outputDirectory>
                            <includes>
                                <include>org/hbrs/ooka/uebung1/**</include>
                            </includes>
                        </configuration>
                    </execution>

                    <execution>
                        <id>component-simulation-jar</id>
                        <phase>compile</phase>
                        <goals><goal>jar</goal></goals>
                        <configuration>
                            <classifier>COMPONENT</classifier>
                            <finalName>${project.artifactId}Simulation</finalName>
                            <outputDirectory>${project.basedir}/jars</outputDirectory>
                            <includes>
                                <include>org/hbrs/ooka/uebung2/**</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>